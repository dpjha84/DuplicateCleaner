<Application x:Class="DuplicateCleaner.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DuplicateCleaner"
             StartupUri="MainWindow1.xaml">
    <Application.Resources>
        <Style x:Key="tc1"  TargetType="{x:Type TabControl}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0,0,0,-1" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="Transparent" />
                            <Border 
                        Name="Border" 
                        Grid.Row="1" 
                        Background="Green" 
                        BorderBrush="Black" 
                        BorderThickness="1,1,1,1" 
                        Margin="0,0,0,0"
                        CornerRadius="4" 
                        KeyboardNavigation.TabNavigation="Local"
                        KeyboardNavigation.DirectionalNavigation="Contained"
                        KeyboardNavigation.TabIndex="2" >
                                <ContentPresenter 
                             Name="PART_SelectedContentHost"
                             Margin="4"
                             ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource DisabledBorderBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ti1" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border" Background="Transparent" BorderBrush="Black" BorderThickness="1,1,1,1" CornerRadius="6,6,0,0">
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}" x:Key="chk2">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Border Background="Green" Height="20" Width="60">
                                <TextBlock HorizontalAlignment="Center" Text="Subfolders" Foreground="LightGray" FontSize="10" VerticalAlignment="Center" />
                            </Border>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Border Background="Gray" Height="20" Width="60">
                                <TextBlock HorizontalAlignment="Center" Text="Subfolders" Foreground="LightGray" FontSize="10" VerticalAlignment="Center" />
                            </Border>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="CheckBox" x:Key="chk1">
            <Style.Triggers>
                <DataTrigger Binding="IsChecked" Value="True">
                    <Setter Property="Background" Value="Green" />
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
                <DataTrigger Binding="IsChecked" Value="False">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="DarkGray" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock" x:Key="bigText">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"  />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="CheckBox" x:Key="bigCheckbox">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"  />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="RadioButton" x:Key="bigRadioButton">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"  />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="CheckBox" x:Key="chkTransform">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"  />
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="20"/>
            <!--<Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="Green"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Background" Value="Gray"/>
                </Trigger>
            </Style.Triggers>-->
        </Style>
        <Style x:Key="myCheckboxStyle1" TargetType="CheckBox">
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="Green" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                                          Width="100"
                                          Height="40"
                                          Background="Gray"
                                          BorderBrush="DarkGreen"
                                          BorderThickness="1"
                                          ClipToBounds="True">
                                    <StackPanel Orientation="Horizontal">
                                        <Border x:Name="checkBorder" Margin="5" Background="LightGray" BorderThickness="2" HorizontalAlignment="Left" VerticalAlignment="Center">
                                            <Path Margin="2" x:Name="CheckMark"
                                            Width="20"
                                            Height="20"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Data="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569"
                                            Stretch="Fill"
                                            Stroke="Black"
                                            StrokeEndLineCap="Round"
                                            StrokeStartLineCap="Round"
                                            StrokeThickness="2" />
                                        </Border>
                                        <StackPanel Margin="5,0,0,0" HorizontalAlignment="Center"  VerticalAlignment="Center">
                                        <TextBlock x:Name="txt" Text="Images" FontSize="14" FontWeight="DemiBold" Foreground="LightGray" />
                                        </StackPanel>
                                    </StackPanel>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                RecognizesAccessKey="True" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="Border" Property="Background" Value="Gray" />
                                <Setter TargetName="txt" Property="Foreground" Value="LightGray" />
                                <Setter TargetName="checkBorder" Property="Background" Value="LightGray" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="CheckMark" Property="Stroke" Value="Green" />
                                <Setter TargetName="Border" Property="Background" Value="Green" />
                                <Setter TargetName="txt" Property="Foreground" Value="White" />
                                <Setter TargetName="checkBorder" Property="Background" Value="White" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" Value="White" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" Value="Gray" />
                                <Setter TargetName="CheckMark" Property="Stroke" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DatePickerTextBox">
            <Setter Property="IsReadOnly" Value="True"/>
        </Style>
        <Style x:Key="myHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>
        <Style x:Key="PrefrenceHeader" TargetType="TextBlock" >
            <Setter Property="FontWeight" Value="Thin" />
            <Setter Property="FontSize" Value="28" />
        </Style>
        <Style x:Key="commonButtonStyle" TargetType="Button" >
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="35" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="FontWeight" Value="DemiBold" />
        </Style>
        <Style x:Key="EnabledButton" TargetType="{x:Type Button}" BasedOn="{StaticResource commonButtonStyle}">
            <Setter Property="Background" Value="Green" />
            <Setter Property="Foreground" Value="White" />
        </Style>
        <Style x:Key="DisabledButton" TargetType="{x:Type Button}" BasedOn="{StaticResource commonButtonStyle}">
            <Setter Property="Background" Value="Gray" />
            <Setter Property="Foreground" Value="DarkGray" />
        </Style>
        <Style x:Key="ListViewItemStyle1" TargetType="{x:Type ListViewItem}">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"  />
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Margin" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border 
                         BorderBrush="Transparent"
                         BorderThickness="0"
                         Background="{TemplateBinding Background}">
                            <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                        </Border>                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="subFolderStyle" TargetType="Button" BasedOn="{StaticResource commonButtonStyle}" >
            <Style.Triggers>
                <DataTrigger Binding="{Binding IncludeSubfolders}" Value="True">
                    <Setter Property="Background" Value="Green" />
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IncludeSubfolders}" Value="False">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="DarkGray" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="excludeStyle" TargetType="Button" BasedOn="{StaticResource commonButtonStyle}" >
            <Style.Triggers>
                <DataTrigger Binding="{Binding Exclude}" Value="True">
                    <Setter Property="Background" Value="Green" />
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Exclude}" Value="False">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="DarkGray" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
