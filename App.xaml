<Application x:Class="DuplicateCleaner.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="mainButton" TargetType="Button">
            <Setter Property="Background" Value="Green" />
            <Setter Property="FontWeight" Value="DemiBold" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LimeGreen" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="deleteButton" TargetType="Button">
            <Setter Property="Background" Value="DarkRed" />
            <Setter Property="FontWeight" Value="DemiBold" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="IndianRed" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="disabledButton" TargetType="Button">
            <Setter Property="Background"
                    Value="Gray" />
            <Setter Property="IsEnabled"
                    Value="False" />
        </Style>
        <Style x:Key="mainLocal"
               TargetType="{x:Type Button}"
               BasedOn="{StaticResource mainButton}">
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="Height"
                    Value="40" />
            <Setter Property="Width"
                    Value="140" />
        </Style>
        <Style x:Key="disabledLocal"
               TargetType="{x:Type Button}"
               BasedOn="{StaticResource disabledButton}">
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="Height"
                    Value="40" />
            <Setter Property="Width"
                    Value="140" />
        </Style>
        <Style x:Key="MyWaterMarkStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border Background="White" BorderBrush="#FF7D8683" BorderThickness="1" />
                            <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center" />
                            <Label FontStyle="Italic" Margin="7,0,0,0" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center" Visibility="Collapsed" Foreground="Gray" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value="" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ContextMenu  x:Key="RowMenu"
                      DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Edit"
                      Click="MenuItem_Click" />
        </ContextMenu>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                         Color="#11ab23" />
        <!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                         Color="Transparent" />-->
        <Style x:Key="rowStyle" TargetType="DataGridRow">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsAlternate}" Value="True">
                    <Setter Property="Background"
                            Value="#75B9BE"></Setter>
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGreen" />
                </Trigger>
                <Trigger Property="IsSelected"
                         Value="True">
                    <Setter Property="BorderThickness"
                            Value="3" />
                    <Setter Property="BorderBrush"
                            Value="DarkGreen" />
                </Trigger>
                <!--<Trigger Property="IsSelected"
                         Value="False">
                    <Setter Property="BorderThickness"
                            Value="5" />
                    <Setter Property="BorderBrush"
                            Value="Transparent" />
                </Trigger>-->
            </Style.Triggers>
            <!--<Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />-->
        </Style>
        <Style x:Key="txtVCenter" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <!--<Setter Property="Padding" Value="5" />-->
            <Setter Property="Margin" Value="10" />
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.25" ScaleY="1.25" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="chkHCenter" TargetType="CheckBox">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
        <Style x:Key="chkVCenter" TargetType="CheckBox" BasedOn="{StaticResource chkHCenter}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="dg" TargetType="DataGrid">
            <Setter Property="HorizontalGridLinesBrush" Value="Gray" />
            <Setter Property="VerticalGridLinesBrush" Value="Gray" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="RowHeaderWidth" Value="0" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="SelectionMode" Value="Single" />
        </Style>
        <Style x:Key="dgCell" TargetType="DataGridCell">
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
        </Style>
        <Style TargetType="TextBlock" x:Key="bigText">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.25" ScaleY="1.25"  />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="CheckBox" x:Key="bigCheckbox">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.25" ScaleY="1.25"  />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="RadioButton" x:Key="bigRadioButton">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.25" ScaleY="1.25"  />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="CheckBox" x:Key="chkSmallTransform">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.25" ScaleY="1.25" />
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="20" />
        </Style>
        <Style TargetType="CheckBox" x:Key="chkTransform">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.25" ScaleY="1.25"  />
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="20"/>
        </Style>
        <Style TargetType="DatePickerTextBox">
            <Setter Property="IsReadOnly" Value="True"/>
        </Style>
        <Style x:Key="myHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>
        <Style x:Key="PrefrenceHeader" TargetType="TextBlock" >
            <Setter Property="FontWeight" Value="Thin" />
            <Setter Property="FontSize" Value="28" />
        </Style>
        <Style x:Key="markHeader" TargetType="{x:Type ListViewItem}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border BorderBrush="Transparent"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}">
                            <GridViewRowPresenter HorizontalAlignment="Stretch"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Width="Auto"
                                                  Margin="0"
                                                  Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewItemStyle1" TargetType="{x:Type ListViewItem}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="Green" />
                    <Setter Property="BorderThickness" Value="1" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                </Trigger>
            </Style.Triggers>
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.25" ScaleY="1.25"  />
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" Padding="15"
                         BorderBrush="Transparent"
                         BorderThickness="1"
                         Background="{TemplateBinding Background}">
                            <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="LightGreen" />
                                <Setter Property="BorderBrush" TargetName="Bd"
                                        Value="Green" />
                                <Setter Property="BorderThickness" TargetName="Bd"
                                        Value="1" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
